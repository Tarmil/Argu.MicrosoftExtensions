name: Build

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'

      - name: Build and test
        run: |
          # GH Actions puts us in detached head, but for nbgv, we need to be on the branch
          if echo "${{github.ref}}" | grep -q "^refs/heads/"; then
            git checkout "$(echo ${{github.ref}} | sed -E 's|^refs/heads/||')";
          fi
          dotnet test -c Release

      - name: Package
        run: dotnet pack -o bin/nuget

      - name: Upload nupkg
        uses: actions/upload-artifact@v1
        with:
          name: nuget
          path: bin/nuget

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ contains(github.ref, 'releases') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'

      - name: Prepare
        run: |
          # GH Actions puts us in detached head, but for nbgv, we need to be on the branch
          git checkout "$(echo ${{github.ref}} | sed -E 's|^refs/[^/]+/||')"
          dotnet tool restore
          SHORT_VERSION="$(dotnet nbgv get-version -v MajorMinorVersion)"
          echo "SHORT_VERSION=$SHORT_VERSION" >> $GITHUB_ENV
          echo "FULL_VERSION=$(dotnet nbgv get-version -v SemVer2)" >> $GITHUB_ENV
          # Parse the relevant changelog entry out of CHANGELOG.md
          sed -n "/^## ${SHORT_VERSION//./\\.}\$/{n;bl};d;:l;/^#/Q;p;n;bl" CHANGELOG.md > release.md

      - name: Create draft release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.FULL_VERSION }}
          release_name: Version ${{ env.SHORT_VERSION }}
          body_path: release.md
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
